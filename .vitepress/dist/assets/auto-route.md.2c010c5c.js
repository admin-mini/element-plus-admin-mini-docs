import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.590dd546.js";const h=JSON.parse('{"title":"auto-route","description":"","frontmatter":{},"headers":[],"relativePath":"auto-route.md","filePath":"auto-route.md"}'),e={name:"auto-route.md"},p=o(`<h1 id="auto-route" tabindex="-1">auto-route <a class="header-anchor" href="#auto-route" aria-label="Permalink to &quot;auto-route&quot;">​</a></h1><p>自动路由</p><p>摆脱繁琐的routes配置、完全自动化</p><h2 id="原理说明" tabindex="-1">原理说明 <a class="header-anchor" href="#原理说明" aria-label="Permalink to &quot;原理说明&quot;">​</a></h2><p>基于vite的<code>i<wbr>mport.meta.glob</code></p><p>深度扫描/views/下所有auto-route.js文件</p><p>根据auto-route.js文件路径获取同级的index.vue当做route的component</p><blockquote><p>这意味着自动路由和自定义路由可以同时存在，你可以不建立auto-route.js 这样就不会自动引入</p></blockquote><h2 id="auto-route-js" tabindex="-1">auto-route.js <a class="header-anchor" href="#auto-route-js" aria-label="Permalink to &quot;auto-route.js&quot;">​</a></h2><p>文件默认导出一个vue-router配置项</p><p>其中weight用来解决路由排序问题 数值越大越靠前</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  weight:</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  name: </span><span style="color:#9ECBFF;">&#39;abc&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  meta: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    name: </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    icon: </span><span style="color:#9ECBFF;">&#39;Grid&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  weight:</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&#39;abc&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  meta: {</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    icon: </span><span style="color:#032F62;">&#39;Grid&#39;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,12),t=[p];function l(r,c,i,u,E,d){return a(),n("div",null,t)}const _=s(e,[["render",l]]);export{h as __pageData,_ as default};
