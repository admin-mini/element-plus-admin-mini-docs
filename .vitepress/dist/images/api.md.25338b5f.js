import{_ as s,o as a,c as n,Q as o}from"./chunks/framework.38acacb6.js";const h=JSON.parse('{"title":"前后端数据交互规范","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md"}'),t={name:"api.md"},l=o(`<h1 id="前后端数据交互规范" tabindex="-1">前后端数据交互规范 <a class="header-anchor" href="#前后端数据交互规范" aria-label="Permalink to &quot;前后端数据交互规范&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>前端请求中，所有数据体（如post中的body）均采用Content-Type: application/json</p></div><h2 id="前端参数" tabindex="-1">前端参数 <a class="header-anchor" href="#前端参数" aria-label="Permalink to &quot;前端参数&quot;">​</a></h2><table><thead><tr><th>字段名</th><th>说明</th></tr></thead><tbody><tr><td>page</td><td>分页请求中的第几页 page=2即为第二页</td></tr><tr><td>size</td><td>分页请求中的页大小 size=20即为每页20条</td></tr></tbody></table><h2 id="后端返回" tabindex="-1">后端返回 <a class="header-anchor" href="#后端返回" aria-label="Permalink to &quot;后端返回&quot;">​</a></h2><table><thead><tr><th>字段名</th><th>说明</th></tr></thead><tbody><tr><td>code</td><td>0正常 1为错误</td></tr><tr><td>total</td><td>响应分页请求的总条数</td></tr><tr><td>data</td><td>数据体</td></tr></tbody></table><p><strong>单个数据</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;code&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;msg&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;data&quot;</span><span style="color:#E1E4E8;">:{}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;code&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;msg&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;data&quot;</span><span style="color:#24292E;">:{}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>多条数据</strong></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;code&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;msg&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;total&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">188</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;data&quot;</span><span style="color:#E1E4E8;">:[]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;code&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;msg&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;total&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">188</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;data&quot;</span><span style="color:#24292E;">:[]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,10),p=[l];function e(c,r,E,d,i,y){return a(),n("div",null,p)}const q=s(t,[["render",e]]);export{h as __pageData,q as default};
